{"version":3,"file":"949.8525865be185f1bf25b5.js","mappings":"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","sources":["webpack://mytonwallet/./src/util/cycleRestrict.ts","webpack://mytonwallet/./src/lib/rlottie/RLottie.ts"],"sourcesContent":["export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport Deferred from '../../util/Deferred';\nimport generateUniqueId from '../../util/generateUniqueId';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport { requestMeasure, requestMutation } from '../fasterdom/fasterdom';\n\ninterface Params {\n  size: number;\n  shouldStretch?: boolean;\n  noLoop?: boolean;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst workers = launchMediaWorkers().map(({ connector }) => connector);\nconst instancesByRenderId = new Map<string, RLottie>();\n\nconst PENDING_CANVAS_RESIZES = new WeakMap<HTMLCanvasElement, Promise<void>>();\n\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private views = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [\n      , canvas,\n      renderId,\n      params,\n      viewId = generateUniqueId(), ,\n      onLoad,\n    ] = args;\n    let instance = instancesByRenderId.get(renderId);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesByRenderId.set(renderId, instance);\n    } else {\n      instance.addView(viewId, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    private tgsUrl: string,\n    private container: HTMLDivElement | HTMLCanvasElement,\n    private renderId: string,\n    private params: Params,\n    viewId: string = generateUniqueId(),\n    private customColor?: [number, number, number],\n    private onLoad?: NoneToVoidFunction | undefined,\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addView(viewId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeView(viewId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.views.get(viewId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.views.delete(viewId);\n\n    if (!this.views.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(viewId?: string) {\n    this.lastRenderAt = undefined;\n\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.views.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number], forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    const frameIndex = Math.round(this.approxFrameIndex);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    if (frameIndex !== stopFrameIndex || forceRestart) {\n      this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    }\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  async setSharedCanvasCoords(viewId: string, newCoords: Params['coords']) {\n    const containerInfo = this.views.get(viewId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    const isCanvasDirty = !canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false';\n\n    if (!isCanvasDirty) {\n      await PENDING_CANVAS_RESIZES.get(canvas);\n    }\n\n    let [canvasWidth, canvasHeight] = [canvas.width, canvas.height];\n\n    if (isCanvasDirty) {\n      const sizeFactor = this.calcSizeFactor();\n      ([canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor));\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      canvas.dataset.isJustCleaned = 'true';\n      requestMeasure(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvasWidth),\n      y: Math.round((newCoords?.y || 0) * canvasHeight),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords!.x, containerInfo.coords!.y);\n    }\n  }\n\n  private addView(\n    viewId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      const { size, shouldStretch } = this.params;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      requestMutation(() => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d')!;\n\n        if (shouldStretch) {\n          canvas.style.width = '100%';\n        } else {\n          canvas.style.width = `${size}px`;\n          canvas.style.height = `${size}px`;\n        }\n\n        canvas.style.display = 'block';\n\n        canvas.width = imgSize;\n        canvas.height = imgSize;\n\n        container.appendChild(canvas);\n\n        this.views.set(viewId, {\n          canvas, ctx, onLoad,\n        });\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      imgSize = Math.round(this.params.size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      const [canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor);\n\n      this.views.set(viewId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round(coords!.x * canvasWidth),\n          y: Math.round(coords!.y * canvasHeight),\n        },\n        onLoad,\n      });\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      size,\n      isLowPriority,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(window.devicePixelRatio * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesByRenderId.delete(this.renderId);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    void workers[this.workerIndex].request({\n      name: 'rlottie:init',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    void workers[this.workerIndex].request({\n      name: 'rlottie:destroy',\n      args: [this.renderId],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    void workers[this.workerIndex].request({\n      name: 'rlottie:changeData',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.views.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.views.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = (this.direction * this.speed) / currentSpeed;\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    }, requestMutation);\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    void workers[this.workerIndex].request({\n      name: 'rlottie:renderFrames',\n      args: [this.renderId, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    const deferred = new Deferred<void>();\n    PENDING_CANVAS_RESIZES.set(canvas, deferred.promise);\n    requestMutation(() => {\n      canvas.width = expectedWidth;\n      canvas.height = expectedHeight;\n      deferred.resolve();\n    });\n  }\n\n  return [expectedWidth, expectedHeight];\n}\n\nexport default RLottie;\n"],"names":["cycleRestrict","length","index","Math","floor","WAITING","Symbol","HIGH_PRIORITY_QUALITY","IS_ANDROID","IS_IOS","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","workers","launchMediaWorkers","map","_ref","connector","instancesByRenderId","Map","PENDING_CANVAS_RESIZES","WeakMap","lastWorkerIndex","RLottie","init","_len","arguments","args","Array","_key","canvas","renderId","params","viewId","generateUniqueId","onLoad","instance","get","addView","coords","set","constructor","tgsUrl","container","undefined","customColor","onEnded","onLoop","_defineProperty","this","initConfig","initRenderer","removeView","ctx","isSharedCanvas","views","clearRect","x","y","imgSize","remove","delete","size","destroy","isPlaying","isAnimating","isWaiting","play","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","direction","doPlay","pause","lastRenderAt","from","values","every","_ref2","isLowPriority","frames","frame","i","prevFrameIndex","close","playSegment","_ref3","startFrameIndex","frameIndex","round","reduceFactor","setSpeed","speed","setNoLoop","noLoop","setSharedCanvasCoords","newCoords","containerInfo","isCanvasDirty","dataset","isJustCleaned","canvasWidth","canvasHeight","width","height","sizeFactor","calcSizeFactor","ensureCanvasSize","requestMeasure","getFrame","drawImage","HTMLDivElement","parentNode","HTMLElement","Error","shouldStretch","imageData","ImageData","requestMutation","document","createElement","getContext","style","display","appendChild","isConnected","isRendererInited","quality","max","window","devicePixelRatio","isDestroyed","clearCache","destroyRenderer","forEach","cacheModulo","setColor","newColor","workerIndex","MAX_WORKERS","request","name","onRendererInit","bind","msPerFrame","framesCount","changeData","onChangeData","animate","_ref4","isLoaded","requestFrame","cleanupPrevFrame","containerData","now","Date","currentSpeed","delta","expectedNextFrameIndex","_this$onLoop","_this$onEnded","call","_this$onLoop2","_this$onEnded2","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","offsetWidth","expectedHeight","offsetHeight","deferred","Deferred","promise","resolve"],"sourceRoot":""}